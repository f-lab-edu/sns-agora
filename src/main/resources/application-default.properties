
spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/flab?useUnicode=true&serverTimezone=GMT&autoReconnect=true
spring.datasource.hikari.username=root
spring.datasource.hikari.password=rootqwer

spring.datasource.url=jdbc:mysql://localhost:3306/flab?useUnicode=true&serverTimezone=GMT&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=rootqwer
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.redis.host=localhost
spring.redis.password=
spring.redis.port=6379
spring.session.store-type=redis

# 좋아요 목록을 저장할 Redis 를 물리적으로 분리하기 위하여
# 2번째 커넥션 정보 입력,
# host 를 분리해야만 하지만 현재는 로컬환경에서 테스트하므로 같은 ip를 쓰게끔 하였습니다.

spring.redis2.host=localhost
spring.redis2.password=
spring.redis2.port=6379

# spring.servlet.multipart.enabled: 멀티파트 업로드 지원여부 (default: true)
# spring.servlet.multipart.file-size-threshold: 파일이 메모리에 기록되는 임계값 (default: 0B)
# 파일이 임계값을 초과시에는 임시저장소에 저장되었다가 업로드된다.
# spring.servlet.multipart.location: 업로드된 파일의 임시 저장 공간
# spring.servlet.multipart.max-file-size: 파일의 최대 사이즈 (default: 1MB)
# spring.servlet.multipart.max-request-size: 요청의 최대 사이즈 (default: 10MB)

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.location=C:/Temp
spring.servlet.multipart.file-size-threshold=1MB

file.windows.path=C:\\images\\

# logging.level.org.springframework=DEBUG