<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht.project.snsproject.mapper.RecommendMapper">

    <select id="getRecommend" parameterType="int" resultType="int">
        SELECT recommend FROM feeds
        WHERE id = #{feedId}
    </select>

    <select id="getRecommendList" parameterType="int" resultType="java.util.List">
        SELECT userId FROM recommends
        WHERE feedId = #{feedId}
    </select>

    <insert id="updateFeedCacheDb" parameterType="java.util.List">
        INSERT INTO feeds(id, userId, title, content, publicScope, date, recommend)
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.userId}, #{item.title}, #{item.content}, #{item.publicScope}, #{item.date}, #{item.recommend})
        </foreach>
        ON DUPLICATE KEY UPDATE
        recommend = VALUES(recommend)
    </insert>

    <insert id="updateRecommendUsers" parameterType="java.util.List">
        INSERT INTO recommends(id, feedId, userId)
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (#{feedId}, #{userId})
        </foreach>
        ON DUPLICATE KEY UPDATE
        userId = VALUES(userId)
    </insert>

    <update id="decrementRecommend" parameterType="int">
        UPDATE feeds
        SET recommend = recommend - 1
        WHERE feedId = #{feedId} AND recommend>0
    </update>

    <delete id="deleteRecommendUser" parameterType="com.ht.project.snsproject.model.recommend.RecommendUserDelete">
        DELETE FROM recommends
        WHERE feedId = #{feedId} AND userId = #{userId}
    </delete>
</mapper>